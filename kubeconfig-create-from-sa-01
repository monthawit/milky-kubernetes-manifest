===============================

vi cluster-admin-sa.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user-01
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user-01-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: admin-user-01
    namespace: default

===============================

kubectl apply -f cluster-admin-sa.yaml

===============================

kubectl get sa 

kubectl describe sa 

kubectl get secret mynamespace-user-token-xxxxx -n default -o "jsonpath={.data.token}" | base64 -d

kubectl get secret mynamespace-user-token-xxxxx -n default -o "jsonpath={.data['ca\.crt']}"

==============================

vi  admin-kubeconfig.cfg

apiVersion: v1
kind: Config
preferences: {}

# Define the cluster
clusters:
- cluster:
    certificate-authority-data:
# You'll need the API endpoint of your Cluster here:
    server: https://192.168.201.125
  name: test-milky-vlan2400-01

# Define the user
users:
- name: admin-user-01
  user:
    as-user-extra: {}
    client-key-data:    
    token:
# Define the context: linking a user to a cluster
contexts:
- context:
    cluster: test-milky-vlan2400-01
    namespace: default
    user: admin-user-01
  name: default

# Define current context
current-context: default
